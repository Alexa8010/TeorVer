import scipy.stats

import numpy as np

# Известно, что генеральная совокупность распределена нормально со средним квадратическим отклонением, равным 16. 
# Найти доверительный интервал для оценки математического ожидания a с надежностью 0.95, 
# если выборочная средняя M = 80, а объем выборки n = 256. 
# Sd = 16
# M = 80
# n = 256
# # z(alpha/2) = z
# z = 1.96
# # Фрмулы: 95%CI = M+/-z*SE,   SE = Sd/(n**0.5)  
# SE = Sd/(n**0.5) # SE = 1
# # Low value of 95%CI = a
# a = M - z * SE #a = 78.04
# # Upper value of 95%CI = b
# b = M + z * SE #b = 81.96
# # Интервал [78.04; 81.96] c 95% вероятностью будет содержать математическое ожидание генеральной совокупности.

# В результате 10 независимых измерений некоторой величины X, выполненных с одинаковой точностью, 
# получены опытные данные: 6.9, 6.1, 6.2, 6.8, 7.5, 6.3, 6.4, 6.9, 6.7, 6.1 
# Предполагая, что результаты измерений подчинены нормальному закону распределения вероятностей, 
# оценить истинное значение величины X при помощи доверительного интервала, покрывающего это значение 
# с доверительной вероятностью 0,95. 

# n=10
# x =np.array([6.9, 6.1, 6.2, 6.8, 7.5, 6.3, 6.4, 6.9, 6.7, 6.1])
# M = np.mean(x) # M = 6.590
# # Формула для расчета 95%CI = M+/-t(alpha/2)*(Sd\(n**0.5)) => 95%CI = M+/-t(alpha/2)*((D\n)**0.5)
# D = np.var(x,ddof=1) # Несмещенная дисперсия = 0.20322
# # t(alpha/2) = t
# t = scipy.stats.t.ppf(0.975, 9) #где 9 - число степеней свободы (n-1), t = 2,2622
# # Low value of 95%CI = a
# a = M-t*(D/n)**0.5 #a = 6.2675
# # Вариант расчета через np: a = M-t*np.sqrt(D/n)
# # Upper value of 95%CI = b
# b = M+t*np.sqrt(D/n) # b = 6.9124
  
#  Таким образом, M = 6.590, 95%CI [6.27; 6.91], 
# интервал [6.27; 6.91] с 95% вероятностью будет содаржать истинное значение величины X. 

# Рост дочерей 175, 167, 154, 174, 178, 148, 160, 167, 169, 170
# Рост матерей  178, 165, 165, 173, 168, 155, 160, 164, 178, 175 
# Используя эти данные построить 95% доверительный интервал для разности среднего роста родителей и детей.
# n=10 # n1=n2=10=len(x)=len(y)
# x =np.array([178, 165, 165, 173, 168, 155, 160, 164, 178, 175])
# y= np.array([175, 167, 154, 174, 178, 148, 160, 167, 169, 170])

# Формула для расчета 95%CI разности среднего роста = deltaM+/-t(alpha/2)*deltaSE
# расчет deltaM

# Mx = np.mean(x) # 168.1
# My = np.mean(y) # 166.2
# deltaM = Mx - My # 1.90

# # расчет t(alpha/2) = t
# t = scipy.stats.t.ppf(0.975, 18) #где 18 - число степеней свободы 2*(n-1), t = 2.10. В таблице для двустороннего t = 2.101 при alpha 0,05

# #расчет стандартной ошибки разности средних deltaSE
# # Dобщ = D = 1/2 * (D1 + D2) 
# # deltaSE = (D/n1 + D/n2)**0,5
# # В настоящем частном случае: deltaSE = (D*2/len(x))**0,5

# D1 = np.var(x, ddof=1) # 60.10
# D2 = np.var(y, ddof=1) # 91.07
# D = 1/2 * (D1 + D2) #75.58
# deltaSE = (D*2/len(x))**0.5 #3.89
# # Low value of 95%CI = a
# a = deltaM - t * deltaSE # a = -6.268
# # # Upper value of 95%CI = b
# b = deltaM + t * deltaSE # b = 10.068

#  Таким образом, разность среднего роста родителей и детей с 95% вероятностью будет
# находиться в интервале [-6.3; 10.1]