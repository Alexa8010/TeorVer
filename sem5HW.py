import scipy.stats

import numpy as np

# Когда используется критерий Стьюдента, а когда Z –критерий? 

    # Z-критерий используется когда известна дисперсия генеральной совокупности, распределение соответствует нормальному закону.
    # t-критерий используется когда дисперсия генеральной совокупности неизвестна, распределение соответствет нормальному закону, 
        # имеет место равенство дисперсий рапределений изучаемых нормально распределенных признаков. 

# Задачи 2,3 решать вручную
# Проведите тест гипотезы. Утверждается, что шарики для подшипников, изготовленные автоматическим станком, 
# имеют средний диаметр 17 мм. Используя односторонний критерий с α=0,05, проверить эту гипотезу, 
# если в выборке из n=100 шариков средний диаметр оказался равным 17.5 мм, а дисперсия известна и равна 4 кв. мм.

# M0 = 17
# M1 = 17.5
# d = 4
# std = 2
# a = 0.05 # при правостороннем тесте z критическое = 1,65.
# n = 100
# # Гипотезы:  H0: M0 = M1   H1: M0 != M1

# z = (M1-M0) / (std / (n ** 0.5))
# print (z) # z расчетное = 2,55

# # расчетное z > критического z при правостороннем тесте => H0 может быть отвергнута => средний диаметр не 17мм




# Проведите тест гипотезы. Продавец утверждает, что средний вес пачки печенья составляет 200 г. 
# Из партии извлечена выборка из 10 пачек. 
# Вес каждой пачки составляет: 202, 203, 199, 197, 195, 201, 200, 204, 194, 190. 
# Известно, что их веса распределены нормально. Верно ли утверждение продавца, если учитывать, 
# что доверительная вероятность равна 99%? (Провести двусторонний тест.) 
# Гипотезы:  H0: M0 = M1   H1: M0 != M1
# M0 = 200
# n = 10
# x =np.array([202, 203, 199, 197, 195, 201, 200, 204, 194, 190])
# р = 0.01

# sum = 0
# for i in x:
#     sum += i

# M1 = sum / len(x) # M1 = 198,5

# sum1 = 0
# for i in x:
#     sum1 += (M1 - i) ** 2
    
# D = sum1 / (len(x) -1) # D = 19.83333

# std = D ** 0.5 # std = 4,4535


# t = (M1 - M0) / (std / (n ** 0.5)) # t расчетное = -1.0651


# по таблицам для двухстороннего t теста при v = 9 и t=1.0651 соответствующий уровень a находится в пределах [0.2:0.5]. 
#  Таким образом, наше оценочное значение p равно 0,35, что превышает заданное значение 0,01 и поддерживает Н0
#  => средний вес пачки печенья составляет 200 г


# Задачу 4 решать с помощью функции.
# Есть ли статистически значимые различия в росте дочерей? 
# Рост матерей 172, 177, 158, 170, 178,175, 164, 160, 169, 165 
# Рост взрослых дочерей: 173, 175, 162, 174, 175, 168, 155, 170, 160

def search_D(arr):
    D = 0
    for i in arr:
        D += (arr.mean() - i) ** 2
    D /= len(arr) - 1 
    return D   

x =np.array([172, 177, 158, 170, 178, 175, 164, 160, 169, 165])
y= np.array([173, 175, 162, 174, 175, 168, 155, 170, 160])

D_x = search_D(x)
D_y = search_D(y)
D = (D_x + D_y) / 2
t = (x.mean() - y.mean()) / (2 * D / len(y)) ** 0.5
print (t) # t = 0,2374
# по таблицам для двухстороннего t теста при v = 8 и t= 0,2374 соответствующий уровень a находится выше значения 0,5. 
#  Таким образом, наше оценочное значение p равно 0,5, что превышает все традиционные уровни статистической значимости 
#  и поддерживает Н0
#  => рост дочерей не отличается